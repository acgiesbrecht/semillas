/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package com.chortitzer.lab.semillas;


import java.awt.EventQueue;
import java.beans.Beans;
import java.util.ArrayList;
import java.util.Date;

import java.util.List;
import javax.persistence.RollbackException;
import javax.swing.JFrame;
import javax.swing.JPanel;

/**
 *
 * @author Industria
 */
public class FormMuestras extends JPanel {
    
    public FormMuestras() {
        initComponents();
        if (!Beans.isDesignTime()) {
            entityManager.getTransaction().begin();
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        entityManager = java.beans.Beans.isDesignTime() ? null : javax.persistence.Persistence.createEntityManagerFactory("industria_lab?zeroDateTimeBehavior=convertToNullPU").createEntityManager();
        query = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT l FROM LabMuestrasSemillas l ORDER BY l.id");
        list = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : org.jdesktop.observablecollections.ObservableCollections.observableList(query.getResultList());
        queryClientes = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT l FROM LabClientes l ORDER BY l.nombre");
        listClientes = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : org.jdesktop.observablecollections.ObservableCollections.observableList(queryClientes.getResultList());
        queryCategorias = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT l FROM LabSemillasCategorias l");
        queryEspecies = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT l FROM LabSemillasEspecies l ORDER BY l.especie, l.variedad");
        listCategorias = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : org.jdesktop.observablecollections.ObservableCollections.observableList(queryCategorias.getResultList());
        listEspecies = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : org.jdesktop.observablecollections.ObservableCollections.observableList(queryEspecies.getResultList());
        categoriasListCellRenderer1 = new com.chortitzer.lab.semillas.CategoriasListCellRenderer();
        especiesListCellRenderer1 = new com.chortitzer.lab.semillas.EspeciesListCellRenderer();
        categoriasTableCellRenderer1 = new com.chortitzer.lab.semillas.CategoriasTableCellRenderer();
        especiesTableCellRenderer1 = new com.chortitzer.lab.semillas.EspeciesTableCellRenderer();
        em = java.beans.Beans.isDesignTime() ? null : javax.persistence.Persistence.createEntityManagerFactory("industria_lab?zeroDateTimeBehavior=convertToNullPU").createEntityManager();
        buttonGroup1 = new javax.swing.ButtonGroup();
        radioButtonConverter1 = new com.chortitzer.lab.semillas.RadioButtonConverter();
        muestraLoteTableCellRenderer1 = new com.chortitzer.lab.semillas.MuestraLoteTableCellRenderer();
        entityManagerMuestreadores = java.beans.Beans.isDesignTime() ? null : javax.persistence.Persistence.createEntityManagerFactory("industria_lab?zeroDateTimeBehavior=convertToNullPU").createEntityManager();
        queryMuestreadores = java.beans.Beans.isDesignTime() ? null : entityManagerMuestreadores.createQuery("SELECT l FROM LabSemillasMuestreadores l");
        listMuestreadores = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : org.jdesktop.observablecollections.ObservableCollections.observableList(queryMuestreadores.getResultList());
        muestreadoresTableCellRenderer1 = new com.chortitzer.lab.semillas.MuestreadoresTableCellRenderer();
        muestreadoresListCellRenderer1 = new com.chortitzer.lab.semillas.MuestreadoresListCellRenderer();
        clientesTableCellRenderer1 = new com.chortitzer.lab.semillas.ClientesTableCellRenderer();
        clientesListCellRenderer1 = new com.chortitzer.lab.semillas.ClientesListCellRenderer();
        categoriasConverter1 = new com.chortitzer.lab.semillas.CategoriasConverter();
        clientesConverter1 = new com.chortitzer.lab.semillas.ClientesConverter();
        especiesConverter1 = new com.chortitzer.lab.semillas.EspeciesConverter();
        muestreadoresConverter1 = new com.chortitzer.lab.semillas.MuestreadoresConverter();
        masterScrollPane = new javax.swing.JScrollPane();
        masterTable = new javax.swing.JTable();
        idLabel = new javax.swing.JLabel();
        idClienteLabel = new javax.swing.JLabel();
        idEspecieLabel = new javax.swing.JLabel();
        identificacionOriginalLabel = new javax.swing.JLabel();
        idCategoriaLabel = new javax.swing.JLabel();
        fechaEntradaLabel = new javax.swing.JLabel();
        zafraLabel = new javax.swing.JLabel();
        procedenciaLabel = new javax.swing.JLabel();
        lotePesoLabel = new javax.swing.JLabel();
        loteCantidadBolsasLabel = new javax.swing.JLabel();
        muestraOLoteLabel = new javax.swing.JLabel();
        fechaMuestreoLabel = new javax.swing.JLabel();
        idField = new javax.swing.JTextField();
        identificacionOriginalField = new javax.swing.JTextField();
        zafraField = new javax.swing.JTextField();
        procedenciaField = new javax.swing.JTextField();
        lotePesoField = new javax.swing.JTextField();
        loteCantidadBolsasField = new javax.swing.JTextField();
        saveButton = new javax.swing.JButton();
        refreshButton = new javax.swing.JButton();
        newButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        cboCliente = new javax.swing.JComboBox();
        cboEspecie = new javax.swing.JComboBox();
        cboCategoria = new javax.swing.JComboBox();
        jXDatePicker1 = new org.jdesktop.swingx.JXDatePicker();
        jXDatePicker2 = new org.jdesktop.swingx.JXDatePicker();
        jRadioButton1 = new javax.swing.JRadioButton();
        rbMuestra = new javax.swing.JRadioButton();
        fechaMuestreoLabel1 = new javax.swing.JLabel();
        cboMuestreador = new javax.swing.JComboBox();

        FormListener formListener = new FormListener();

        especiesListCellRenderer1.setText("especiesListCellRenderer1");

        categoriasTableCellRenderer1.setText("categoriasTableCellRenderer1");

        especiesTableCellRenderer1.setText("especiesTableCellRenderer1");

        muestraLoteTableCellRenderer1.setText("muestraLoteTableCellRenderer1");

        muestreadoresTableCellRenderer1.setText("muestreadoresTableCellRenderer1");

        muestreadoresListCellRenderer1.setText("muestreadoresListCellRenderer1");

        clientesTableCellRenderer1.setText("clientesTableCellRenderer2");

        clientesListCellRenderer1.setText("clientesListCellRenderer2");

        org.jdesktop.swingbinding.JTableBinding jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, list, masterTable);
        org.jdesktop.swingbinding.JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${id}"));
        columnBinding.setColumnName("Muestra NÂº");
        columnBinding.setColumnClass(Integer.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${idCliente}"));
        columnBinding.setColumnName("Cliente");
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${idEspecie}"));
        columnBinding.setColumnName("Especie");
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${identificacionOriginal}"));
        columnBinding.setColumnName("Identificacion Original");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${idCategoria}"));
        columnBinding.setColumnName("Categoria");
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${fechaEntrada}"));
        columnBinding.setColumnName("Fecha Entrada");
        columnBinding.setColumnClass(java.util.Date.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${zafra}"));
        columnBinding.setColumnName("Zafra");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${procedencia}"));
        columnBinding.setColumnName("Procedencia");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${lotePeso}"));
        columnBinding.setColumnName("Lote Peso");
        columnBinding.setColumnClass(Integer.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${loteCantidadBolsas}"));
        columnBinding.setColumnName("Lote Cantidad Bolsas");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${muestraOLote}"));
        columnBinding.setColumnName("Muestra o Lote");
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${fechaMuestreo}"));
        columnBinding.setColumnName("Fecha Muestreo");
        columnBinding.setColumnClass(java.util.Date.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${idMuestreador}"));
        columnBinding.setColumnName("Muestreador");
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        masterScrollPane.setViewportView(masterTable);
        if (masterTable.getColumnModel().getColumnCount() > 0) {
            masterTable.getColumnModel().getColumn(1).setCellRenderer(clientesTableCellRenderer1);
            masterTable.getColumnModel().getColumn(2).setCellRenderer(especiesTableCellRenderer1);
            masterTable.getColumnModel().getColumn(4).setCellRenderer(categoriasTableCellRenderer1);
            masterTable.getColumnModel().getColumn(10).setCellRenderer(muestraLoteTableCellRenderer1);
            masterTable.getColumnModel().getColumn(12).setCellRenderer(muestreadoresTableCellRenderer1);
        }

        idLabel.setText("Muestra NÂº:");

        idClienteLabel.setText("Cliente:");

        idEspecieLabel.setText("Especie:");

        identificacionOriginalLabel.setText("Identificacion Original:");

        idCategoriaLabel.setText("Categoria:");

        fechaEntradaLabel.setText("Fecha Entrada:");

        zafraLabel.setText("Zafra:");

        procedenciaLabel.setText("Procedencia:");

        lotePesoLabel.setText("Lote Peso:");

        loteCantidadBolsasLabel.setText("Lote Cantidad Bolsas:");

        muestraOLoteLabel.setText("Muestra/Lote:");

        fechaMuestreoLabel.setText("Fecha Muestreo:");

        idField.setEditable(false);

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.id}"), idField, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceUnreadableValue("null");
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), idField, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.identificacionOriginal}"), identificacionOriginalField, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceUnreadableValue("null");
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), identificacionOriginalField, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.zafra}"), zafraField, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceUnreadableValue("null");
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), zafraField, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.procedencia}"), procedenciaField, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceUnreadableValue("null");
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), procedenciaField, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.lotePeso}"), lotePesoField, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceUnreadableValue("null");
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), lotePesoField, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.loteCantidadBolsas}"), loteCantidadBolsasField, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceUnreadableValue("null");
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), loteCantidadBolsasField, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        saveButton.setText("Guardar");
        saveButton.addActionListener(formListener);

        refreshButton.setText("Actualizar");
        refreshButton.addActionListener(formListener);

        newButton.setText("Nuevo");
        newButton.addActionListener(formListener);

        deleteButton.setText("Eliminar");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), deleteButton, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        deleteButton.addActionListener(formListener);

        cboCliente.setRenderer(clientesListCellRenderer1);

        org.jdesktop.swingbinding.JComboBoxBinding jComboBoxBinding = org.jdesktop.swingbinding.SwingBindings.createJComboBoxBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, listClientes, cboCliente);
        bindingGroup.addBinding(jComboBoxBinding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.idCliente}"), cboCliente, org.jdesktop.beansbinding.BeanProperty.create("selectedItem"));
        bindingGroup.addBinding(binding);

        cboEspecie.setRenderer(especiesListCellRenderer1);

        jComboBoxBinding = org.jdesktop.swingbinding.SwingBindings.createJComboBoxBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, listEspecies, cboEspecie);
        bindingGroup.addBinding(jComboBoxBinding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.idEspecie}"), cboEspecie, org.jdesktop.beansbinding.BeanProperty.create("selectedItem"));
        bindingGroup.addBinding(binding);

        cboCategoria.setRenderer(categoriasListCellRenderer1);

        jComboBoxBinding = org.jdesktop.swingbinding.SwingBindings.createJComboBoxBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, listCategorias, cboCategoria);
        bindingGroup.addBinding(jComboBoxBinding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.idCategoria}"), cboCategoria, org.jdesktop.beansbinding.BeanProperty.create("selectedItem"));
        bindingGroup.addBinding(binding);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.fechaEntrada}"), jXDatePicker1, org.jdesktop.beansbinding.BeanProperty.create("date"));
        bindingGroup.addBinding(binding);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.fechaMuestreo}"), jXDatePicker2, org.jdesktop.beansbinding.BeanProperty.create("date"));
        bindingGroup.addBinding(binding);

        buttonGroup1.add(jRadioButton1);
        jRadioButton1.setText("Lote");

        buttonGroup1.add(rbMuestra);
        rbMuestra.setText("Muestra");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.muestraOLote}"), rbMuestra, org.jdesktop.beansbinding.BeanProperty.create("selected"));
        binding.setConverter(radioButtonConverter1);
        bindingGroup.addBinding(binding);

        fechaMuestreoLabel1.setText("Muestreador:");

        cboMuestreador.setRenderer(muestreadoresListCellRenderer1);

        jComboBoxBinding = org.jdesktop.swingbinding.SwingBindings.createJComboBoxBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, listMuestreadores, cboMuestreador);
        bindingGroup.addBinding(jComboBoxBinding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.idMuestreador}"), cboMuestreador, org.jdesktop.beansbinding.BeanProperty.create("selectedItem"));
        bindingGroup.addBinding(binding);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(masterScrollPane, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 949, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(idLabel)
                            .addComponent(idClienteLabel)
                            .addComponent(idEspecieLabel)
                            .addComponent(identificacionOriginalLabel)
                            .addComponent(idCategoriaLabel)
                            .addComponent(fechaEntradaLabel)
                            .addComponent(zafraLabel)
                            .addComponent(procedenciaLabel)
                            .addComponent(lotePesoLabel)
                            .addComponent(loteCantidadBolsasLabel)
                            .addComponent(muestraOLoteLabel)
                            .addComponent(fechaMuestreoLabel)
                            .addComponent(fechaMuestreoLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(procedenciaField, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(idField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(rbMuestra)
                                .addGap(9, 9, 9)
                                .addComponent(jRadioButton1))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(cboMuestreador, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(identificacionOriginalField, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(cboCliente, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(cboEspecie, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jXDatePicker1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(cboCategoria, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jXDatePicker2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(lotePesoField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                                            .addComponent(loteCantidadBolsasField, javax.swing.GroupLayout.Alignment.LEADING))
                                        .addComponent(zafraField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(304, 304, 304)
                                .addComponent(newButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(deleteButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(refreshButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(saveButton)))))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {deleteButton, newButton, refreshButton, saveButton});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(masterScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 119, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(idLabel)
                    .addComponent(idField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(idClienteLabel)
                    .addComponent(cboCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(idEspecieLabel)
                    .addComponent(cboEspecie, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(identificacionOriginalLabel)
                    .addComponent(identificacionOriginalField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(idCategoriaLabel)
                    .addComponent(cboCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fechaEntradaLabel)
                    .addComponent(jXDatePicker1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(zafraLabel)
                    .addComponent(zafraField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(procedenciaLabel)
                    .addComponent(procedenciaField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lotePesoLabel)
                    .addComponent(lotePesoField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(loteCantidadBolsasLabel)
                    .addComponent(loteCantidadBolsasField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(muestraOLoteLabel)
                    .addComponent(jRadioButton1)
                    .addComponent(rbMuestra))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fechaMuestreoLabel)
                    .addComponent(jXDatePicker2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(saveButton)
                    .addComponent(refreshButton)
                    .addComponent(deleteButton)
                    .addComponent(newButton)
                    .addComponent(fechaMuestreoLabel1)
                    .addComponent(cboMuestreador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        bindingGroup.bind();
    }

    // Code for dispatching events from components to event handlers.

    private class FormListener implements java.awt.event.ActionListener {
        FormListener() {}
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            if (evt.getSource() == saveButton) {
                FormMuestras.this.saveButtonActionPerformed(evt);
            }
            else if (evt.getSource() == refreshButton) {
                FormMuestras.this.refreshButtonActionPerformed(evt);
            }
            else if (evt.getSource() == newButton) {
                FormMuestras.this.newButtonActionPerformed(evt);
            }
            else if (evt.getSource() == deleteButton) {
                FormMuestras.this.deleteButtonActionPerformed(evt);
            }
        }
    }// </editor-fold>//GEN-END:initComponents

    

    @SuppressWarnings("unchecked")
    private void refreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshButtonActionPerformed
        entityManager.getTransaction().rollback();
        entityManager.getTransaction().begin();
        java.util.Collection data = query.getResultList();
        for (Object entity : data) {
            entityManager.refresh(entity);
        }
        list.clear();
        list.addAll(data);
    }//GEN-LAST:event_refreshButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        int[] selected = masterTable.getSelectedRows();
        List<com.chortitzer.lab.semillas.LabMuestrasSemillas> toRemove = new ArrayList<com.chortitzer.lab.semillas.LabMuestrasSemillas>(selected.length);
        for (int idx = 0; idx < selected.length; idx++) {
            com.chortitzer.lab.semillas.LabMuestrasSemillas l = list.get(masterTable.convertRowIndexToModel(selected[idx]));
            toRemove.add(l);
            entityManager.remove(l);            
        }
        list.removeAll(toRemove);
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void newButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newButtonActionPerformed
        LabMuestrasSemillas l = new LabMuestrasSemillas();        
        entityManager.persist(l);        
        Integer nextId = (Integer) em.createQuery("select max(t.id)+1 from LabMuestrasSemillas t").getSingleResult();
        if(nextId!=null){
            l.setId(nextId);
        }else{
            l.setId(1);
        }                      
        l.setFechaEntrada(new Date());
        list.add(l);
        int row = list.size() - 1;
        System.out.println(rbMuestra.isSelected());
        masterTable.setRowSelectionInterval(row, row);
        masterTable.scrollRectToVisible(masterTable.getCellRect(row, 0, true));
    }//GEN-LAST:event_newButtonActionPerformed
    
    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        try {
            entityManager.getTransaction().commit();
            entityManager.getTransaction().begin();
        } catch (RollbackException rex) {
            rex.printStackTrace();
            entityManager.getTransaction().begin();
            List<com.chortitzer.lab.semillas.LabMuestrasSemillas> merged = new ArrayList<com.chortitzer.lab.semillas.LabMuestrasSemillas>(list.size());
            for (com.chortitzer.lab.semillas.LabMuestrasSemillas l : list) {
                merged.add(entityManager.merge(l));
            }
            list.clear();
            list.addAll(merged);
        }
    }//GEN-LAST:event_saveButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private com.chortitzer.lab.semillas.CategoriasConverter categoriasConverter1;
    private com.chortitzer.lab.semillas.CategoriasListCellRenderer categoriasListCellRenderer1;
    private com.chortitzer.lab.semillas.CategoriasTableCellRenderer categoriasTableCellRenderer1;
    private javax.swing.JComboBox cboCategoria;
    private javax.swing.JComboBox cboCliente;
    private javax.swing.JComboBox cboEspecie;
    private javax.swing.JComboBox cboMuestreador;
    private com.chortitzer.lab.semillas.ClientesConverter clientesConverter1;
    private com.chortitzer.lab.semillas.ClientesListCellRenderer clientesListCellRenderer1;
    private com.chortitzer.lab.semillas.ClientesTableCellRenderer clientesTableCellRenderer1;
    private javax.swing.JButton deleteButton;
    private javax.persistence.EntityManager em;
    private javax.persistence.EntityManager entityManager;
    private javax.persistence.EntityManager entityManagerMuestreadores;
    private com.chortitzer.lab.semillas.EspeciesConverter especiesConverter1;
    private com.chortitzer.lab.semillas.EspeciesListCellRenderer especiesListCellRenderer1;
    private com.chortitzer.lab.semillas.EspeciesTableCellRenderer especiesTableCellRenderer1;
    private javax.swing.JLabel fechaEntradaLabel;
    private javax.swing.JLabel fechaMuestreoLabel;
    private javax.swing.JLabel fechaMuestreoLabel1;
    private javax.swing.JLabel idCategoriaLabel;
    private javax.swing.JLabel idClienteLabel;
    private javax.swing.JLabel idEspecieLabel;
    private javax.swing.JTextField idField;
    private javax.swing.JLabel idLabel;
    private javax.swing.JTextField identificacionOriginalField;
    private javax.swing.JLabel identificacionOriginalLabel;
    private javax.swing.JRadioButton jRadioButton1;
    private org.jdesktop.swingx.JXDatePicker jXDatePicker1;
    private org.jdesktop.swingx.JXDatePicker jXDatePicker2;
    private java.util.List<com.chortitzer.lab.semillas.LabMuestrasSemillas> list;
    private java.util.List listCategorias;
    private java.util.List listClientes;
    private java.util.List listEspecies;
    private java.util.List<com.chortitzer.lab.semillas.LabMuestrasSemillas> listMuestreadores;
    private javax.swing.JTextField loteCantidadBolsasField;
    private javax.swing.JLabel loteCantidadBolsasLabel;
    private javax.swing.JTextField lotePesoField;
    private javax.swing.JLabel lotePesoLabel;
    private javax.swing.JScrollPane masterScrollPane;
    private javax.swing.JTable masterTable;
    private com.chortitzer.lab.semillas.MuestraLoteTableCellRenderer muestraLoteTableCellRenderer1;
    private javax.swing.JLabel muestraOLoteLabel;
    private com.chortitzer.lab.semillas.MuestreadoresConverter muestreadoresConverter1;
    private com.chortitzer.lab.semillas.MuestreadoresListCellRenderer muestreadoresListCellRenderer1;
    private com.chortitzer.lab.semillas.MuestreadoresTableCellRenderer muestreadoresTableCellRenderer1;
    private javax.swing.JButton newButton;
    private javax.swing.JTextField procedenciaField;
    private javax.swing.JLabel procedenciaLabel;
    private javax.persistence.Query query;
    private javax.persistence.Query queryCategorias;
    private javax.persistence.Query queryClientes;
    private javax.persistence.Query queryEspecies;
    private javax.persistence.Query queryMuestreadores;
    private com.chortitzer.lab.semillas.RadioButtonConverter radioButtonConverter1;
    private javax.swing.JRadioButton rbMuestra;
    private javax.swing.JButton refreshButton;
    private javax.swing.JButton saveButton;
    private javax.swing.JTextField zafraField;
    private javax.swing.JLabel zafraLabel;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
    public static void main(String[] args) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */

        //</editor-fold>

        /* Create and display the form */
        EventQueue.invokeLater(new Runnable() {
            public void run() {
                JFrame frame = new JFrame();
                frame.setContentPane(new FormMuestras());
                frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
                frame.pack();
                frame.setVisible(true);
            }
        });
    }
    
}
